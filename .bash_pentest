alias pentest-keygen="ssh-keygen -t ed25519 -f"

alias dirsearch="/usr/bin/dirsearch --config ~/.config/dirsearch/default.conf"
alias msfconsole="msfconsole -r ~/.msf4/msfconsole.rc"
alias xfreerdp="xfreerdp /h:1024 /w:1640"
alias nc="rlwrap nc"

alias gdb="gdb -q -ex init-pwndbg"
alias gdb-pwn="gdb -q -ex init-pwndbg"
alias gdb-gef="gdb -q -ex init-gef"
alias aslr-on="echo 2 | sudo tee /proc/sys/kernel/randomize_va_space"
alias aslr-off="echo 0 | sudo tee /proc/sys/kernel/randomize_va_space"
alias aslr-status="cat /proc/sys/kernel/randomize_va_space"

##
# pentesting commands
alias get-linpeas="curl -sLO https://github.com/carlospolop/PEASS-ng/releases/latest/download/linpeas.sh"


_nmap-std() {
    PORTS=$(sudo nmap --min-rate=1000 -T4 -p- "$1" | grep '^[0-9]' | cut -d'/' -f 1 | tr '\n' ',' | sed s/',$'//) ;
    echo "ports found: $PORTS";
    USER=$(whoami)
    sudo nmap -sVC -p$PORTS -oX nmap.xml "$1";
    sudo chown $USER nmap.xml
}
#

function __set_active_symlink(){
    link=$1
    target=$2
    if [[ -L "$link" ]]; then
        rm -f $link
    else
        mv  $link "$link-save"
    fi
    ln -s $target $link
}

function __unset_active_symlink(){
    link=$1
    target=$2
    c_target=$(readlink -f $link)
    if [[ "$c_target" == "$target" ]] ; then
        rm -f $link
        mv  "$link-save" $link
    fi
}


function init_pproject(){
    PROJECT_BASE=${2:-$HOME/documents/pentesting-games/htb}
    PROJECT_NAME=$1
    PROJECT="$PROJECT_BASE/$PROJECT_NAME"

    JOHN_LOGS="$PROJECT/evidence/logging/john"
    CME_LOGS="$PROJECT/evidence/logging/cme"
    JWT_TOOL_LOGS="$PROJECT/evidence/logging/jwt_tool"
    HASHCAT_LOGS="$PROJECT/evidence/logging/hashcat"
    SQLMAP_LOGS="$PROJECT/evidence/logging/hashcat"
    TPLMAP_LOGS="$PROJECT/evidence/logging/tplmap"
    if [ ! -d "$PROJECT" ] ; then
        mkdir -p $PROJECT/{admin,deliverables,evidence/{findings,scans/{vuln,service,web,ad},notes,osint,wireless,logging,misc},retest,utils}
        cp ~/documents/pentesting-write-up/box-template.tex $PROJECT/deliverables/$PROJECT_NAME.tex

        ln -s /usr/share/wordlists $PROJECT/utils/wordlists
        mkdir -p $JOHN_LOGS
        mkdir -p $HASHCAT_LOGS
        mkdir -p $CME_LOGS
        mkdir -p $SQLMAP_LOGS
        mkdir -p $JWT_TOOL_LOGS
        mkdir -p $TPLMAP_LOGS
    fi
}

function close_pproject(){
    PROJECT_BASE=${2:-$HOME/documents/pentesting-games/htb}
    PROJECT_NAME=$1
    PROJECT="$PROJECT_BASE/$PROJECT_NAME"

    JOHN_LOGS="$PROJECT/evidence/logging/john"
    CME_LOGS="$PROJECT/evidence/logging/cme"
    JWT_TOOL_LOGS="$PROJECT/evidence/logging/jwt_tool"
    HASHCAT_LOGS="$PROJECT/evidence/logging/hashcat"
    SQLMAP_LOGS="$PROJECT/evidence/logging/hashcat"
    TPLMAP_LOGS="$PROJECT/evidence/logging/tplmap"
    if [ -d "$PROJECT" ]; then
        __unset_active_symlink ~/.john $JOHN_LOGS
        __unset_active_symlink  ~/.local/share/hashcat $HASHCAT_LOGS
        __unset_active_symlink  ~/.cme $CME_LOGS
        __unset_active_symlink  ~/.local/share/sqlmap $SQLMAP_LOGS
        __unset_active_symlink  ~/.jwt_tool $JWT_TOOL_LOGS
        __unset_active_symlink  ~/.tplmap $TPLMAP_LOGS
        rm -f $PROJECT/utils/wordlists
        rm -rf $PROJECT
    fi
}

function activate_pproject(){
    PROJECT_BASE=${2:-$HOME/documents/pentesting-games/htb}
    PROJECT_NAME=$1
    PROJECT="$PROJECT_BASE/$PROJECT_NAME"

    JOHN_LOGS="$PROJECT/evidence/logging/john"
    CME_LOGS="$PROJECT/evidence/logging/cme"
    JWT_TOOL_LOGS="$PROJECT/evidence/logging/jwt_tool"
    HASHCAT_LOGS="$PROJECT/evidence/logging/hashcat"
    SQLMAP_LOGS="$PROJECT/evidence/logging/hashcat"
    TPLMAP_LOGS="$PROJECT/evidence/logging/tplmap"
    if [ -d "$PROJECT" ] ; then
        __set_active_symlink ~/.john $JOHN_LOGS
        __set_active_symlink  ~/.local/share/hashcat $HASHCAT_LOGS
        __set_active_symlink  ~/.cme $CME_LOGS
        __set_active_symlink  ~/.local/share/sqlmap $SQLMAP_LOGS
        __set_active_symlink  ~/.jwt_tool $JWT_TOOL_LOGS
        __set_active_symlink  ~/.tplmap $TPLMAP_LOGS
    fi
}




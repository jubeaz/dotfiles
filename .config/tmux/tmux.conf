# remap prefix from 'C-b' to 'C-w'
#unbind C-b
#set-option -g prefix C-w
#bind-key C-w send-prefix
# https://tmuxcheatsheet.com/

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank' # copy to xsel or xclip
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# ##################################
# ##################################
# Plugin config
# ##################################
# ##################################
# tmux-logging
set -g @screen-capture-path "~/.config/tmux/sc"
set -g @screen-capture-filename "tmux-sc-#{session_name}-%Y%m%dT%H%M%S-#{window_index}-#{pane_index}.log"
set -g @logging-path "~/.config/tmux/logging"
set -g @@logging-filename "tmux-#{session_name}-%Y%m%dT%H%M%S-#{window_index}-#{pane_index}.log"
set -g @save-complete-history-path "~/.config/tmux/sc"
set -g @save-complete-history-filename "tmux-history-#{session_name}-%Y%m%dT%H%M%S-#{window_index}-#{pane_index}.log"
# tmux-resurrect
set -g @resurrect-dir '~/.config/tmux/resurrect'
# tmux-yank
set-option -g set-clipboard on
set -g @yank_action 'copy-pipe-and-cancel' # copy an quit copy mode or 'copy-pipe'
set -g @yank_with_mouse off # or 'on'


# ##################################
# ##################################
# copy-mode key table BINDINGS
# ##################################
# ##################################
unbind-key -a -T copy-mode
# ##################################
# ##################################
# copy-mode-vi key table BINDINGS
# ##################################
# ##################################

# ##################################
# ##################################
# root key table BINDINGS
# ##################################
# ##################################
# switch panes using Ctrl-arrow without prefix
bind-key -n C-h select-pane -L
bind-key -n C-l select-pane -R
bind-key -n C-k select-pane -U
bind-key -n C-j select-pane -D
#bind-key -n C-Left select-pane -L
#bind-key -n C-Right select-pane -R
#bind-key -n C-Up select-pane -U
#bind-key -n C-Down select-pane -D


unbind-key -a -T prefix
# ##################################
# ##################################
# prefix key table BINDINGS
# ##################################
# ##################################
bind-key -r -T prefix DC      refresh-client -c
bind-key    -T prefix /       command-prompt -k -p key { list-keys -1N "%%" }
bind-key    -T prefix \$      command-prompt -I "#S" { rename-session "%%" }
bind-key    -T prefix C-b     send-prefix
bind-key    -T prefix \~      show-messages
bind-key    -T prefix i       display-message
bind-key    -T prefix d       detach-client
bind-key    -T prefix C-z     suspend-client
bind-key    -T prefix C-r     run-shell /home/jubeaz/.config/tmux/plugins/tmux-resurrect/scripts/restore.sh
bind-key    -T prefix C-s     run-shell /home/jubeaz/.config/tmux/plugins/tmux-resurrect/scripts/save.sh
bind-key    -T prefix :       command-prompt
bind-key    -T prefix R       run-shell " \t\t\ttmux source-file /home/jubeaz/.config/tmux/tmux.conf > /dev/null; \t\t\ttmux display-message 'Sourced /home/jubeaz/.config/tmux/tmux.conf!'"
bind-key    -T prefix ?       list-keys -N
bind-key    -T prefix w       choose-tree -Zw
bind-key    -T prefix r       refresh-client
bind-key    -T prefix t       clock-mode
bind-key    -T prefix Escape  copy-mode \; send-keys -X start-of-line

# #########
# session
# #########
bind-key -r -T prefix M-Up    switch-client -n
bind-key -r -T prefix M-down  switch-client -p
bind-key    -T prefix D       choose-client -Z
# #########
# windows
# #########
bind-key    -T prefix M-ENTER new-window
bind-key    -T prefix M-r     command-prompt -I "#W" { rename-window "%%" }
bind-key    -T prefix M-s     split-window -v
bind-key    -T prefix M-v     split-window -h
bind-key    -T prefix M-&     confirm-before -p "kill-window #W? (y/n)" kill-window
bind-key    -T prefix M-\'    command-prompt -T window-target -p index { select-window -t ":%%" }
bind-key    -T prefix M-.     command-prompt -T target { move-window -t "%%" }
bind-key    -T prefix M-<     display-menu -T "#[align=centre]#{window_index}:#{window_name}" -x W -y W "#{?#{>:#{session_windows},1},,-}Swap Left" l { swap-window -t :-1 } "#{?#{>:#{session_windows},1},,-}Swap Right" r { swap-window -t :+1 } "#{?pane_marked_set,,-}Swap Marked" s { swap-window } '' Kill X { kill-window } Respawn R { respawn-window -k } "#{?pane_marked,Unmark,Mark}" m { select-pane -m } Rename n { command-prompt -F -I "#W" { rename-window -t "#{window_id}" "%%" } } '' "New After" w { new-window -a } "New At End" W { new-window }
# selection
bind-key -r -T prefix M-Left  previous-window
bind-key -r -T prefix M-p     previous-window
bind-key -r -T prefix M-Right next-window
bind-key -r -T prefix M-n     next-window
bind-key    -T prefix M-PPage select-window -t :$
bind-key    -T prefix M-NPage select-window -t :=0
bind-key    -T prefix 0       select-window -t :=0
bind-key    -T prefix 1       select-window -t :=1
bind-key    -T prefix 2       select-window -t :=2
bind-key    -T prefix 3       select-window -t :=3
bind-key    -T prefix 4       select-window -t :=4
bind-key    -T prefix 5       select-window -t :=5
bind-key    -T prefix 6       select-window -t :=6
bind-key    -T prefix 7       select-window -t :=7
bind-key    -T prefix 8       select-window -t :=8
bind-key    -T prefix 9       select-window -t :=9
# layout
bind-key    -T prefix M-1     select-layout even-horizontal
bind-key    -T prefix M-2     select-layout even-vertical
bind-key    -T prefix M-3     select-layout main-horizontal
bind-key    -T prefix M-4     select-layout main-vertical
bind-key    -T prefix M-5     select-layout tiled
bind-key    -T prefix M-6     select-layout main-horizontal-mirrored
bind-key    -T prefix M-7     select-layout main-vertical-mirrored
bind-key    -T prefix Space   next-layout
bind-key    -T prefix E       select-layout -E
# #########
# pane
# #########
bind-key -r -T prefix S-Up    resize-pane -U 5
bind-key -r -T prefix S-Down  resize-pane -D 5
bind-key -r -T prefix S-Left  resize-pane -L 5
bind-key -r -T prefix S-Right resize-pane -R 5
bind-key -r -T prefix Up      select-pane -U
bind-key -r -T prefix Down    select-pane -D
bind-key -r -T prefix Left    select-pane -L
bind-key -r -T prefix Right   select-pane -R
bind-key    -T prefix z       resize-pane -Z
bind-key    -T prefix q       display-panes
bind-key    -T prefix !       break-pane  # break pane into a new window
bind-key    -T prefix x       confirm-before -p "kill-pane #P? (y/n)" kill-pane
bind-key    -T prefix \{      swap-pane -U
bind-key    -T prefix \}      swap-pane -D
bind-key    -T prefix M       select-pane -M
bind-key    -T prefix m       select-pane -m
bind-key    -T prefix >       display-menu -T "#[align=centre]#{pane_index} (#{pane_id})" -x P -y P "#{?#{m/r:(copy|view)-mode,#{pane_mode}},Go To Top,}" < { send-keys -X history-top } "#{?#{m/r:(copy|view)-mode,#{pane_mode}},Go To Bottom,}" > { send-keys -X history-bottom } '' "#{?mouse_word,Search For #[underscore]#{=/9/...:mouse_word},}" C-r { if-shell -F "#{?#{m/r:(copy|view)-mode,#{pane_mode}},0,1}" "copy-mode -t=" ; send-keys -X -t = search-backward "#{q:mouse_word}" } "#{?mouse_word,Type #[underscore]#{=/9/...:mouse_word},}" C-y { copy-mode -q ; send-keys -l "#{q:mouse_word}" } "#{?mouse_word,Copy #[underscore]#{=/9/...:mouse_word},}" c { copy-mode -q ; set-buffer "#{q:mouse_word}" } "#{?mouse_line,Copy Line,}" l { copy-mode -q ; set-buffer "#{q:mouse_line}" } '' "#{?mouse_hyperlink,Type #[underscore]#{=/9/...:mouse_hyperlink},}" C-h { copy-mode -q ; send-keys -l "#{q:mouse_hyperlink}" } "#{?mouse_hyperlink,Copy #[underscore]#{=/9/...:mouse_hyperlink},}" h { copy-mode -q ; set-buffer "#{q:mouse_hyperlink}" } '' "Horizontal Split" h { split-window -h } "Vertical Split" v { split-window -v } '' "#{?#{>:#{window_panes},1},,-}Swap Up" u { swap-pane -U } "#{?#{>:#{window_panes},1},,-}Swap Down" d { swap-pane -D } "#{?pane_marked_set,,-}Swap Marked" s { swap-pane } '' Kill X { kill-pane } Respawn R { respawn-pane -k } "#{?pane_marked,Unmark,Mark}" m { select-pane -m } "#{?#{>:#{window_panes},1},,-}#{?window_zoomed_flag,Unzoom,Zoom}" z { resize-pane -Z }
# ############
# tmux-logging
# ############
bind-key    -T prefix l       run-shell /home/jubeaz/.config/tmux/plugins/tmux-logging/scripts/toggle_logging.sh
bind-key    -T prefix M-l     run-shell /home/jubeaz/.config/tmux/plugins/tmux-logging/scripts/save_complete_history.sh
bind-key    -T prefix C-l     run-shell /home/jubeaz/.config/tmux/plugins/tmux-logging/scripts/screen_capture.sh
bind-key    -T prefix M-c     run-shell /home/jubeaz/.config/tmux/plugins/tmux-logging/scripts/clear_history.sh
# #########
# tmux-yank
# #########
bind-key    -T prefix y       run-shell -b /home/jubeaz/.config/tmux/plugins/tmux-yank/scripts/copy_line.sh
bind-key    -T prefix Y       run-shell -b /home/jubeaz/.config/tmux/plugins/tmux-yank/scripts/copy_pane_pwd.sh
# #########
# tpm
# #########
bind-key    -T prefix U       run-shell /home/jubeaz/.config/tmux/plugins/tpm/bindings/update_plugins
bind-key    -T prefix I       run-shell /home/jubeaz/.config/tmux/plugins/tpm/bindings/install_plugins
bind-key    -T prefix M-u     run-shell /home/jubeaz/.config/tmux/plugins/tpm/bindings/clean_plugins

# ##################################
# ##################################
# Configs
# ##################################
# ##################################

set -g default-terminal "tmux-256color"
set -g history-limit 50000
# Enable mouse mode (tmux 2.1 and above)
set -g mouse on
# edit mode vi 
setw -g mode-keys vi 


# Allow the arrow key to be used immediately after changing windows
#set-option -g repeat-time 0
######################
### DESIGN CHANGES ###
######################
# loud or quiet?
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none

#  modes
setw -g clock-mode-colour colour5
setw -g mode-style 'fg=colour1 bg=colour18 bold'
# panes
set -g pane-border-style "bg=colour237,fg=white"
if-shell '[ $(hostnamectl hostname) = "akamatsu" ]' \
    'set -g pane-active-border-style "fg=colour201,bold"' \
    'set -g pane-active-border-style "fg=colour210,bold"' 

#set -g pane-active-border-style "fg=green,bold"
# status
set-option -g status on
set-option -g status-interval 1
set-option -g status-justify centre
set-option -g status-keys vi
set-option -g status-position bottom
set-option -g status-style fg=white,bg=colour235
set-option -g status-left-length 20
set-option -g status-left-style default
if-shell '[ $(hostnamectl hostname) = "akamatsu" ]' \
    'set-option -g status-left "#[fg=colour201,bold]#H #[fg=colour201]• #[fg=colour201]#(uname -r)#[default]"' \
    'set-option -g status-left "#[fg=colour210,bold]#H #[fg=colour210]• #[fg=colour210]#(uname -r)#[default]"' 
#set-option -g status-left "#[fg=green]#H #[fg=black]• #[fg=green,bright]#(uname -r)#[default]"
set-option -g status-right-length 140
set-option -g status-right-style default
#set-option -g status-right "#[fg=green,bg=default,bright]#(tmux-mem-cpu-load) "
set-option -g status-right ""
if-shell '[ $(hostnamectl hostname) = "akamatsu" ]' \
    'set-option -ag status-right "#[fg=colour201,bg=default]#(uptime | cut -f 4-5 -d \" \" | cut -f 1 -d \",\") "'\
    'set-option -ag status-right "#[fg=colour210,bg=default]#(uptime | cut -f 4-5 -d \" \" | cut -f 1 -d \",\") "'
set-option -ag status-right " #[fg=white,bg=default]%a %l:%M:%S %p#[default] #[fg=white]%Y-%m-%d"

# default window title colors
#set-window-option -g window-status-fg colour244  # base0

# active window title colors
set-window-option -g window-status-current-style fg=black  # orange
#set-window-option -g window-status-current-bg default
if-shell '[ $(hostnamectl hostname) = "akamatsu" ]' \
    'set-window-option -g window-status-current-style bg=colour201,bold,fg=black'\
    'set-window-option -g window-status-current-style bg=colour210,bold,fg=black'
#set-window-option -g window-status-current-style bg=green,fg=black

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'
run '~/.config/tmux/plugins/yank/yank.tmux'
run '~/.config/tmux/plugins/sensible/sensible.tmux'
run-shell '~/.config/tmux/plugins/tmux-resurrect/resurect.tmux'
run-shell '~/.config/tmux/plugins/tmux-logging/logging.tmux'
